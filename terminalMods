
##phil's terminal mod start


#default prompt
#PS1="[\u@\H \w> "
PS2="    >"

ifJobs() {
    local stopped=$(jobs -sp | wc -l)
    local running=$(jobs -rp | wc -l)
    total=$((stopped + running))
    if [ "$total" -ne 0 ];then #running or stopped has one or more jobs
        echo
        jobs -l
    fi
}

happy(){
    if [ $1 -eq 0 ];then  ##success
        echo -ne '\e[0;32m'
        echo -ne '(Ծ‸ Ծ)'
        echo -ne '\e[0;1;30m'
    elif [ $1 -eq 2 ];then  ##gtest fail?
        echo -ne '\e[0;36m'
        echo -ne 'щ(ಥДಥ щ)'
        echo -ne '\e[0;1;30m'
    elif [ $1 -eq 127 ] || [ $1 -eq 130 ];then ##not found, or user terminated
        echo -ne '\e[0;33m'
        echo -ne '¯\(ºдಠ)/¯'
        echo -ne '\e[0;1;30m'
    elif [ $1 -eq 148 ];then  ##suspend
        echo -ne '\e[0;35m'
        echo -ne '（￣へ￣）'
        echo -ne '\e[0;1;30m'
    else  ##all else, error?
        echo -ne '\e[0;31m'
        echo -ne 'ﾉ(`Д`)ﾉ彡'
        echo -ne '\e[0;1;30m'
    fi
}

set_bash_prompt(){
#BullTerminal is just the name of the window
#happy
#PS1='\[\e]2;BullTerminal\a\]n\e[0;1;30m\]╔═ $(happy $commOutput) ═╣ \w ╠══$(ifJobs)\n╚═➤\[\e[0m\] '
    
    commOutput=`echo $?`
    #$(happy $commOutput)

    #if [ "$TERM" == "konsole" ]; then
         PS1="\[\e]2;BullTerminal\a\]\[\033[0m\]\u> "
    #else
        if [ $commOutput -ne 0 ] && [ $commOutput -ne 127 ] && [ $commOutput -ne 130 ] && [ $commOutput -ne 148 ] && [ $commOutput -ne 2 ];then
            PS1='\[\e]2;BullTerminal\a\]\[\033[0;1;30m\]            ═╩═\n╔═ $(happy $commOutput) \w ╠══$(ifJobs)\n╚═➤\[\e[0m\] '
        else
            PS1='\[\e]2;BullTerminal\a\]\n\[\033[0;1;30m\]╔═ $(happy $commOutput) ═╣ \w ╠══$(ifJobs)\n╚═➤\[\e[0m\] '
        fi
    #fi
}
#
PROMPT_COMMAND=set_bash_prompt
#
#
##phil's terminal mod end
##farsos directory movement start
function up {
	counter=${1:-1}	
	for ((x=0; x<$counter; x++ ));do

		cd ..
	done
	
	
}
##farsos directory movement end
#remove to recycle bin start
function rm {
	#drop all options I passed to it like -rf and get the actual file or directory
	if [[ $1 =~ ^- ]]; then
		murder=$2
	else
		murder=$1
	fi
	
	#rm -rf / protection
	if [[ $murder =~ ^\/$ ]]; then 
		echo -e "I don't know who you are, but you tried to kill my baby
		\nI advise you leave now because if you continue down this path
		\nI promise you this your actions will come back to haunt you
		\nand when they do, no one will be able to help you		
		"
		return 1
	fi
	#get the full path of the file or folder I want dead
	oPath=$(readlink -f $murder)
	#drop the / if it's a directory 
	if [[ $murder =~ (.*)\/$ ]];then
		murder=${BASH_REMATCH[1]}
		oPath="$oPath/"
	fi
	#move the file to the ubuntu trash bin (could be natulus the file manager)
	mv $oPath ~/.local/share/Trash/files/
	#create an entry in said trashbin
	echo -e "[Trash Info]\nPath=$oPath\nDeletionDate=$(date +%d-%m-%YT%H:%M:%S)" >> ~/.local/share/Trash/info/$murder.trashinfo
}
#remove to recycle bin end
